{"version":3,"sources":["js/upload.js","js/app.js"],"names":["Uploader","selector","configs","document","querySelector","createElement","classList","add","textContent","style","display","after","changeHandler","e","files","Array","from","target","forEach","file","reader","FileReader","console","log","type","readAsDataURL","fileImgs","onload","fileURL","insertAdjacentHTML","addEventListener","multiple","setAttribute","accept","isArray","join","clickHandler","click","uploader","BtnCreater","PreviewPrinter"],"mappings":";;ACAA;;;;AAEA,IAAMsC,QAAQ,GAAG,IAAItC,eAAJ,CAAa,QAAb,EAAuB;EACpC+B,QAAQ,EAAE,IAD0B;EAEpCE,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,MAA1B;AAF4B,CAAvB,CAAjB;AAKAK,QAAQ,CAACC,UAAT;AACAD,QAAQ,CAACE,cAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IDRqBxC;EAKjB,kBAAYC,QAAZ,EAAoC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IAAA;;IAAA;;IAAA;;IAAA;MAAA;MAAA;IAAA;;IAAA;MAAA;MAAA;IAAA;;IAAA;MAAA;MAAA;IAAA;;IAChC,oCAAcC,QAAQ,CAACC,aAAT,CAAuBH,QAAvB,CAAd;;IACA,sCAAgBC,OAAhB;EACH;;;;WAED,oBAAWD,QAAX,EAAqB;MACjB,sCAAgBE,QAAQ,CAACE,aAAT,CAAuB,QAAvB,CAAhB;;MAEA,sCAAcC,SAAd,CAAwBC,GAAxB,CAA4B,oBAA5B,EAAkD,cAAlD;;MACA,sCAAcC,WAAd,GAA4B,SAA5B;MAEA,oCAAYC,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;;MACA,oCAAYC,KAAZ,uBAAkB,IAAlB;;MAEA;;MACA;IACH;;;WAED,0BAAiB;MACb,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC,EAAI;QACvB,IAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWH,CAAC,CAACI,MAAF,CAASH,KAApB,CAAd;QAEAA,KAAK,CAACI,OAAN,CAAc,UAAAC,IAAI,EAAI;UAClB,IAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;UAEAC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,IAAjB;UAEAJ,MAAM,CAACK,aAAP,CAAqBN,IAArB;UACA,IAAMO,QAAQ,GAAG;YACb,mBAAmB;UADN,CAAjB;;UAIAN,MAAM,CAACO,MAAP,GAAgB,UAAAd,CAAC,EAAI;YACjB,IAAIe,OAAO;YAAI;YAA+DF,QAAQ,CAACP,IAAI,CAACK,IAAN,CAAtF;YAEArB,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCyB,kBAAzC,CAA4D,YAA5D,qBAAsFD,OAAtF;UACH,CAJD;QAKH,CAfD;MAgBH,CAnBD;;MAqBA,oCAAYE,gBAAZ,CAA6B,QAA7B,EAAuClB,aAAvC;IACH;;;;;;;;yBAEc;EACX,IAAI,sCAAcmB,QAAlB,EAA4B;IACxB,oCAAYC,YAAZ,CAAyB,UAAzB,EAAqC,IAArC;EACH;;EAED,IAAI,sCAAcC,MAAd,IAAwBlB,KAAK,CAACmB,OAAN,CAAc,sCAAcD,MAA5B,CAA5B,EAAiE;IAC7D,IAAMA,MAAM,GAAG,sCAAcA,MAAd,CAAqBE,IAArB,CAA0B,IAA1B,CAAf;;IAEA,oCAAYH,YAAZ,CAAyB,QAAzB,EAAmCC,MAAnC;EACH;AACJ;;0BAEe;EAAA;;EACZ,IAAMG,YAAY,GAAG,SAAfA,YAAe;IAAA,OAAM,2BAAI,SAAJ,CAAYC,KAAZ,EAAN;EAAA,CAArB;;EAEA,sCAAcP,gBAAd,CAA+B,OAA/B,EAAwCM,YAAxC;AACH","file":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["export default class Uploader {\n    #openBtn;\n    #input;\n    #configs;\n\n    constructor(selector, configs = {}) {\n        this.#input = document.querySelector(selector);\n        this.#configs = configs;\n    }\n\n    BtnCreater(selector) {\n        this.#openBtn = document.createElement(\"button\");\n\n        this.#openBtn.classList.add(\"uploader-btn__open\", \"uploader-btn\");\n        this.#openBtn.textContent = \"Открыть\";\n\n        this.#input.style.display = \"none\";\n        this.#input.after(this.#openBtn);\n\n        this.#inputClicker();\n        this.#inputConfig();\n    }\n\n    PreviewPrinter() {\n        const changeHandler = e => {\n            const files = Array.from(e.target.files);\n\n            files.forEach(file => {\n                let reader = new FileReader();\n\n                console.log(file.type)\n\n                reader.readAsDataURL(file);\n                const fileImgs = {\n                    \"application/pdf\": \"1.jpg\",\n                };\n\n                reader.onload = e => {\n                    let fileURL =  /*navigator.userAgent.includes('Safari') ? e.target.result :*/ fileImgs[file.type];\n\n                    document.querySelector(\".uploader-imgs\").insertAdjacentHTML(\"afterbegin\", `<img src=${fileURL} class=\"uploader-imgs__item\"/>`);\n                }\n            });\n        }\n\n        this.#input.addEventListener(\"change\", changeHandler)\n    }\n\n    #inputConfig() {\n        if (this.#configs.multiple) {\n            this.#input.setAttribute(\"multiple\", true);\n        }\n\n        if (this.#configs.accept && Array.isArray(this.#configs.accept)) {\n            const accept = this.#configs.accept.join(\", \");\n\n            this.#input.setAttribute(\"accept\", accept)\n        }\n    }\n\n    #inputClicker() {\n        const clickHandler = () => this.#input.click();\n\n        this.#openBtn.addEventListener(\"click\", clickHandler);\n    }\n}","import Uploader from \"../js/upload.js\";\n\nconst uploader = new Uploader(\"#input\", {\n    multiple: true,\n    accept: [\".jpg\", \".docx\", \".png\", \".pdf\"]\n});\n\nuploader.BtnCreater();\nuploader.PreviewPrinter();"]}